{"version":3,"sources":["Redux/directory.reducer.js","Redux/collection.types.js","Redux/collection.reducer.js","Redux/user.types.js","Redux/user.reducer.js","Redux/cart.types.js","Redux/cart.utils.js","Redux/cart.reducer.js","Redux/root-reducer.js","Redux/store.js","Redux/user.selectors.js","Firebase/firebase.utils.js","Pages/AboutPage/AboutPage.jsx","Redux/cart.selectors.js","Redux/cart.actions.js","Components/CartDropdown/CartDropdown.jsx","Components/CartIcon/CartIcon.jsx","Components/CartItem/CartItem.jsx","Components/CheckoutItem/CheckoutItem.jsx","Components/CollectionItem/CollectionItem.jsx","Redux/collection.selectors.js","Components/CollectionOverview/CollectionOverview.jsx","Components/CollectionPreview/CollectionPreview.jsx","Components/CustomButton/CustomButton.jsx","Components/DirectoryItem/DirectoryItem.jsx","Redux/directory.selectors.js","Components/DirectoryMenu/DirectoryMenu.jsx","Components/LoginForm/LoginForm.jsx","Components/RegisterForm/RegisterForm.jsx","Components/Tabs/Tabs.jsx","Components/Inputs/PasswordInput/PasswordInput.jsx","Components/Inputs/TextInput/TextInput.jsx","Pages/CheckoutPage/CheckoutPage.jsx","Pages/CollectionPage/CollectionPage.jsx","Pages/HomePage/HomePage.jsx","Pages/LoginPage/LoginPage.jsx","Pages/RegisterPage/RegisterPage.jsx","Redux/collection.actions.js","Pages/StorePage/StorePage.jsx","App.js","Redux/user.actions.js","index.js"],"names":["INITIAL_STATE","sections","title","imageUrl","id","linkUrl","directoryReducer","state","action","type","CollectionActionTypes","isFetching","errorMessage","undefined","collectionReducer","payload","UserActionTypes","currentUser","userReducer","CartActionTypes","addItemToCart","cartItems","cartItemToAdd","find","cartItem","map","quantity","removeItemFromCart","cartItemToRemove","filter","clearItemFromCart","cartItemToClear","hidden","cartReducer","persistConfig","key","storage","whitelist","rootReducer","combineReducers","directory","collection","user","cart","persistReducer","middlewares","logger","thunk","store","createStore","applyMiddleware","persistor","persistStore","selectCurrentUser","createSelector","createUserProfileDocument","userAuth","additionalData","a","userRef","firestore","doc","uid","get","exists","displayName","email","createdAt","Date","set","console","log","message","firebase","apps","length","app","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","auth","provider","GoogleAuthProvider","setCustomParameters","prompt","signInWithGoogle","signInWithPopup","AboutPage","className","cur","i","selectCart","selectCartHidden","selectCartItems","selectCartItemsCount","reduce","b","selectCartTotal","price","toggleCartHidden","addItem","item","mapState","createStructuredSelector","withRouter","connect","dispatch","history","onClick","push","itemCount","CartItem","name","style","backgroundImage","Intl","NumberFormat","currency","format","removeItem","clearItem","selectCollection","selectCollectionSections","selectCollectionSectionsAsArray","collections","Object","keys","selectIsCollectionFetching","selectIsCollectionLoaded","collectionSectionsArray","otherProps","CollectionPreview","items","toUpperCase","_","CustomButton","children","isGoogleSignIn","match","url","selectDirectorySections","directorySections","LoginForm","useState","password","credentials","setCredentials","handleSubmit","e","preventDefault","signInWithEmailAndPassword","handleChange","value","onSubmit","onChange","label","RegisterForm","confirmPassword","alert","createUserWithEmailAndPassword","exact","to","activeClassName","signOut","PasswordInput","target","placeholder","TextInput","cartTotal","clearCart","ownProps","collectionUrlParam","params","collectionName","HomePage","LoginPage","RegisterPage","fetchCollectionsStartAsync","collectionRef","then","snapshot","collectionsMap","docs","data","routeName","encodeURI","toLowerCase","acc","fetchCollectionsSuccess","catch","error","isCollectionFetching","isCollectionLoaded","useEffect","path","component","CollectionOverview","CollectionPage","setCurrentUser","unsubscribeFromAuth","onAuthStateChanged","onSnapshot","StorePage","CheckoutPage","render","ReactDOM","document","getElementById"],"mappings":"ybAAMA,EAAgB,CACpBC,SAAU,CACR,CACEC,MAAO,gBACPC,SAAU,mKACVC,GAAI,EACJC,QAAS,iBAEX,CACEH,MAAO,eACPC,SAAU,mKACVC,GAAI,EACJC,QAAS,gBAEX,CACEH,MAAO,aACPC,SAAU,gKACVC,GAAI,EACJC,QAAS,cAEX,CACEH,MAAO,YACPC,SAAU,kKACVC,GAAI,EACJC,QAAS,eAYAC,EAPU,WAAoC,IAAnCC,EAAkC,uDAA1BP,EAAeQ,EAAW,uCAGtD,OAFIA,EAAOC,KAEJF,G,OChCAG,EACc,0BADdA,EAEgB,4BAFhBA,EAGgB,4BCDvBV,EAAgB,CACpBC,SAAU,KACVU,YAAY,EACZC,kBAAcC,GA2BDC,EAxBW,WAAoC,IAAnCP,EAAkC,uDAA1BP,EAAeQ,EAAW,uCAC3D,OAAQA,EAAOC,MACb,KAAKC,EACH,OAAO,2BACFH,GADL,IAEEI,YAAY,IAEhB,KAAKD,EACH,OAAO,2BACFH,GADL,IAEEI,YAAY,EACZV,SAAUO,EAAOO,UAErB,KAAKL,EACH,OAAO,2BACFH,GADL,IAEEI,YAAY,EACZC,aAAcJ,EAAOO,UAEzB,QACE,OAAOR,IC5BAS,EACO,mBCCdhB,EAAgB,CACpBiB,YAAa,MAeAC,EAZK,WAAoC,IAAnCX,EAAkC,uDAA1BP,EAAeQ,EAAW,uCACrD,OAAQA,EAAOC,MACb,KAAKO,EACH,OAAO,2BACFT,GADL,IAEEU,YAAaT,EAAOO,UAExB,QACE,OAAOR,ICdAY,EACS,qBADTA,EAED,WAFCA,EAGE,cAHFA,EAIC,aAJDA,EAKC,a,QCLDC,EAAgB,SAACC,EAAWC,GAavC,OAZyBD,EAAUE,MAAK,SAACC,GAAD,OAAcA,EAASpB,KAAOkB,EAAclB,MAK9DiB,EAAUI,KAAI,SAACD,GAAD,OAChCA,EAASpB,KAAOkB,EAAclB,GAA9B,2BAAwCoB,GAAxC,IAAkDE,SAAUF,EAASE,SAAW,IAAMF,KAGvE,sBAAOH,GAAP,4BAAuBC,GAAvB,IAAsCI,SAAU,OAMxDC,EAAqB,SAACN,EAAWO,GAa5C,OARkC,IAJTP,EAAUE,MAAK,SAACC,GAAD,OAAcA,EAASpB,KAAOwB,EAAiBxB,MAIlEsB,SACCL,EAAUI,KAAI,SAACD,GAAD,OAChCA,EAASpB,KAAOwB,EAAiBxB,GAAjC,2BAA2CoB,GAA3C,IAAqDE,SAAUF,EAASE,SAAW,IAAMF,KAGvEH,EAAUQ,QAAO,SAACL,GAAD,OAAcA,EAASpB,KAAOwB,EAAiBxB,OAM3E0B,EAAoB,SAACT,EAAWU,GAK3C,OAFoBV,EAAUQ,QAAO,SAACL,GAAD,OAAcA,EAASpB,KAAO2B,EAAgB3B,OChC/EJ,EAAgB,CACpBgC,QAAQ,EACRX,UAAW,IAmCEY,EAhCK,WAAoC,IAAnC1B,EAAkC,uDAA1BP,EAAeQ,EAAW,uCACrD,OAAQA,EAAOC,MACb,KAAKU,EACH,OAAO,2BACFZ,GADL,IAEEyB,QAASzB,EAAMyB,SAEnB,KAAKb,EACH,OAAO,2BACFZ,GADL,IAEEc,UAAWD,EAAcb,EAAMc,UAAWb,EAAOO,WAErD,KAAKI,EACH,OAAO,2BACFZ,GADL,IAEEc,UAAWM,EAAmBpB,EAAMc,UAAWb,EAAOO,WAE1D,KAAKI,EACH,OAAO,2BACFZ,GADL,IAEEc,UAAWS,EAAkBvB,EAAMc,UAAWb,EAAOO,WAEzD,KAAKI,EACH,OAAO,2BACFZ,GADL,IAEEc,UAAW,KAEf,QACE,OAAOd,IC3BP2B,EAAgB,CACpBC,IAAK,OACLC,YACAC,UAAW,CAAC,SAGRC,EAAcC,YAAgB,CAClCC,UAAWlC,EACXmC,WAAY3B,EACZ4B,KAAMxB,EACNyB,KAAMV,IAGOW,cAAeV,EAAeI,GCfvCO,EAAc,CAACC,IAAQC,KAEhBC,EAAQC,YAAYX,EAAaY,IAAe,WAAf,EAAmBL,IAEpDM,EAAYC,YAAaJ,G,+CCPzBK,EAAoBC,YAC/B,CAHiB,SAAC/C,GAAD,OAAWA,EAAMmC,QAIlC,SAACA,GAAD,OAAUA,EAAKzB,e,QCOJsC,G,YAAyB,uCAAG,WAAOC,EAAUC,GAAjB,qBAAAC,EAAA,yDAClCF,EADkC,wDAGjCG,EAAUC,EAAUC,IAAV,gBAAuBL,EAASM,MAHT,SAKhBH,EAAQI,MALQ,iBAOzBC,OAPyB,wBAQ7BC,EAAuBT,EAAvBS,YAAaC,EAAUV,EAAVU,MACfC,EAAY,IAAIC,KATe,mBAY7BT,EAAQU,IAAR,aACJJ,cACAC,QACAC,aACGV,IAhB8B,0DAmBnCa,QAAQC,IAAI,sBAAuB,KAAMC,SAnBN,iCAuBhCb,GAvBgC,0DAAH,yDA2BrCc,IAASC,KAAKC,OAA0CF,IAASG,MAA1CH,IAASI,cApClB,CACbC,OAAQ,0CACRC,WAAY,yCACZC,UAAW,yBACXC,cAAe,qCACfC,kBAAmB,gBACnBC,MAAO,+CA6CF,IAkBMC,EAAOX,IAASW,OAChBxB,EAAYa,IAASb,YAE5ByB,GAAW,IAAIZ,IAASW,KAAKE,mBACnCD,GAASE,oBAAoB,CAAEC,OAAQ,mBAChC,IAAMC,GAAmB,kBAAML,EAAKM,gBAAgBL,K,IAE5CZ,EAAf,E,MCpDekB,GA1BG,WAGhB,OACE,sBAAKC,UAAU,MAAf,SACE,sBAAKA,UAAU,mDAAf,SACE,uBAAKA,UAAU,UAAf,UACE,sBAAKA,UAAU,eAAf,SACE,qBAAIA,UAAU,cAAd,qBAEF,uBAAKA,UAAU,eAAf,UACE,oBAAGA,UAAU,OAAb,8CACA,qBAAIA,UAAU,YAAd,SAXI,CAAC,QAAS,SAAU,QAAS,QAAS,WAAY,WAAY,kBAaxDnE,KAAI,SAACoE,EAAKC,GAAN,OACR,8BAAaD,GAAJC,mBCfrBC,GAAa,SAACxF,GAAD,OAAWA,EAAMoC,MAEvBqD,GAAmB1C,YAC9B,CAACyC,KACD,SAACpD,GAAD,OAAUA,EAAKX,UAGJiE,GAAkB3C,YAC7B,CAACyC,KACD,SAACpD,GAAD,OAAUA,EAAKtB,aAGJ6E,GAAuB5C,YAClC,CAAC2C,KACD,SAAC5E,GAAD,OAAeA,EAAU8E,QAAO,SAACzC,EAAG0C,GAAJ,OAAU1C,EAAI0C,EAAE1E,WAAU,MAG/C2E,GAAkB/C,YAC7B,CAAC2C,KACD,SAAC5E,GAAD,OAAeA,EAAU8E,QAAO,SAACzC,EAAG0C,GAAJ,OAAU1C,EAAI0C,EAAE1E,SAAW0E,EAAEE,QAAO,MCnBzDC,GAAmB,iBAAO,CACrC9F,KAAMU,IAGKqF,GAAU,SAACC,GAAD,MAAW,CAChChG,KAAMU,EACNJ,QAAS0F,ICqBLC,I,MAAWC,YAAyB,CACxCtF,UAAW4E,MAOEW,eAAWC,YAAQH,IAJd,SAACI,GAAD,MAAe,CACjCP,iBAAkB,kBAAMO,EAASP,UAGTM,EA1BL,SAAC,GAAD,IAAGxF,EAAH,EAAGA,UAAWkF,EAAd,EAAcA,iBAAkBQ,EAAhC,EAAgCA,QAAhC,OACnB,uBAAKnB,UAAU,gBAAf,UACE,sBAAKA,UAAU,sBAAf,SAEIvE,EAAUsD,OAAS,EACjBtD,EAAUI,KAAI,SAACD,GAAD,OAAc,eAAC,GAAD,CAA4BA,SAAUA,GAAvBA,EAASpB,OACpD,mBAGN,eAAC,GAAD,CACE4G,QAAS,WACPD,EAAQE,KAAK,aACbV,KAHJ,mCCJEG,I,MAAWC,YAAyB,CACxCO,UAAWhB,MAOEW,eAAQH,IAJH,SAACI,GAAD,MAAe,CACjCP,iBAAkB,kBAAMO,EAASP,UAGpBM,EAfE,SAAC,GAAD,IAAGN,EAAH,EAAGA,iBAAkBW,EAArB,EAAqBA,UAArB,OACf,qBAAGF,QAAST,EAAkBX,UAAU,YAAxC,UACE,sBAAKA,UAAU,yBACf,gCAAOsB,UCGIC,I,MAXE,SAAC,GAAD,QAAG3F,SAAYrB,EAAf,EAAeA,SAAUiH,EAAzB,EAAyBA,KAAMd,EAA/B,EAA+BA,MAAO5E,EAAtC,EAAsCA,SAAtC,OACf,uBAAKkE,UAAU,YAAf,UACE,sBAAKA,UAAU,kBAAkByB,MAAO,CAAEC,gBAAgB,OAAD,OAASnH,EAAT,QACzD,uBAAKyF,UAAU,iBAAf,UACGwB,EACD,wBACC1F,EAHH,MAGgB,IAAI6F,KAAKC,aAAa,QAAS,CAAEH,MAAO,WAAYI,SAAU,QAASC,OAAOpB,WCqCnFO,I,MAAAA,YAAQ,MANH,SAACC,GAAD,MAAe,CACjCN,QAAS,SAAChF,GAAD,OAAcsF,EAASN,GAAQhF,KACxCmG,WAAY,SAACnG,GAAD,OAAcsF,EJhCS,CACnCrG,KAAMU,EACNJ,QI8B8CS,KAC9CoG,UAAW,SAACpG,GAAD,OAAcsF,EJ5BS,CAClCrG,KAAMU,EACNJ,QI0B4CS,QAG/BqF,EAxCM,SAAC,GAAkD,IAAhDrF,EAA+C,EAA/CA,SAAUgF,EAAqC,EAArCA,QAASmB,EAA4B,EAA5BA,WAAYC,EAAgB,EAAhBA,UAC7CzH,EAAoCqB,EAApCrB,SAAUiH,EAA0B5F,EAA1B4F,KAAMd,EAAoB9E,EAApB8E,MAAO5E,EAAaF,EAAbE,SAE/B,OACE,sBAAKkE,UAAU,gBAAf,SACE,uBAAKA,UAAU,yBAAf,UACE,sBAAKA,UAAU,QAAf,SAAuB,sBAAKA,UAAU,iBAAiByB,MAAO,CAAEC,gBAAgB,OAAD,OAASnH,EAAT,UAC/E,sBAAKyF,UAAU,QAAf,SAAwBwB,IACxB,sBAAKxB,UAAU,QAAf,SACE,uBAAKA,UAAU,4BAAf,UACE,oBAAGA,UAAU,UAAUoB,QAAS,kBAAMW,EAAWnG,IAAjD,SACE,sBAAKoE,UAAU,iCAEjB,gCAAOlE,IACP,oBAAGkE,UAAU,UAAUoB,QAAS,kBAAMR,EAAQhF,IAA9C,SACE,sBAAKoE,UAAU,uCAIrB,sBAAKA,UAAU,mBAAf,SACG,IAAI2B,KAAKC,aAAa,QAAS,CAAEH,MAAO,WAAYI,SAAU,QAASC,OAAOpB,KAEjF,sBAAKV,UAAU,QAAf,SACE,sBAAKA,UAAU,6BAAf,SACE,oBAAGoB,QAAS,kBAAMY,EAAUpG,IAA5B,SACE,sBAAKoE,UAAU,0CCTdiB,I,MAAAA,YAAQ,MAJH,SAACC,GAAD,MAAe,CACjCN,QAAS,SAACC,GAAD,OAAUK,EAASN,GAAQC,QAGvBI,EAfQ,SAAC,GAAD,IAAGJ,EAAH,EAAGA,KAAH,IAASA,KAAQtG,EAAjB,EAAiBA,SAAUiH,EAA3B,EAA2BA,KAAMd,EAAjC,EAAiCA,MAASE,EAA1C,EAA0CA,QAA1C,OACrB,uBAAKZ,UAAU,kBAAf,UACE,sBAAKA,UAAU,QAAQyB,MAAO,CAAEC,gBAAgB,OAAD,OAASnH,EAAT,QAC/C,uBAAKyF,UAAU,SAAf,UACE,sBAAKA,UAAU,OAAf,SAAuBwB,IACvB,sBAAKxB,UAAU,QAAf,SAAwB,IAAI2B,KAAKC,aAAa,QAAS,CAAEH,MAAO,WAAYI,SAAU,QAASC,OAAOpB,QAExG,eAAC,GAAD,CAAcU,QAAS,kBAAMR,EAAQC,IAArC,gC,SCbEoB,GAAmB,SAACtH,GAAD,OAAWA,EAAMkC,YAE7BqF,GAA2BxE,YACtC,CAACuE,KACD,SAACpF,GAAD,OAAgBA,EAAWxC,YAGhB8H,GAAkCzE,YAC7C,CAACwE,KACD,SAACE,GAAD,OAAiBA,EAAcC,OAAOC,KAAKF,GAAavG,KAAI,SAACU,GAAD,OAAS6F,EAAY7F,MAAQ,MAU9EgG,GAA6B7E,YACxC,CAACuE,KACD,SAACpF,GAAD,OAAgBA,EAAW9B,cAGhByH,GAA2B9E,YACtC,CAACuE,KACD,SAACpF,GAAD,QAAkBA,EAAWxC,Y,kBCTzByG,GAAWC,YAAyB,CACxC0B,wBAAyBN,KAGZlB,eAAQH,GAARG,EAdY,SAAC,GAAD,IAAGwB,EAAH,EAAGA,wBAAH,OACzB,qCAEIA,EAAwB5G,KAAI,gBAAGrB,EAAH,EAAGA,GAAOkI,EAAV,0BAC1B,eAAC,GAAD,eAAgCA,GAARlI,WCMjBmI,I,MAbW,SAAC,GAAD,IAAGrI,EAAH,EAAGA,MAAOsI,EAAV,EAAUA,MAAV,OACxB,uBAAK5C,UAAU,qBAAf,UACE,8BAAK1F,EAAMuI,gBACX,sBAAK7C,UAAU,UAAf,SAEI4C,EAAM3G,QAAO,SAAC6G,EAAG5C,GAAJ,OAAUA,EAAI,KAAGrE,KAAI,SAACgF,GAAD,OAChC,eAAC,GAAD,CAA8BA,KAAMA,GAAfA,EAAKrG,c,iCCJrBuI,GANM,SAAC,GAAD,IAAGC,EAAH,EAAGA,SAAUC,EAAb,EAAaA,eAAmBP,EAAhC,0BACnB,iDAAQ1C,UAAS,oBAAeiD,EAAiB,eAAiB,eAAoBP,GAAtF,aACGM,MCaUhC,I,MAAAA,aAZO,SAAC,GAAD,IAAG1G,EAAH,EAAGA,MAAOC,EAAV,EAAUA,SAAUE,EAApB,EAAoBA,QAASyI,EAA7B,EAA6BA,MAAO/B,EAApC,EAAoCA,QAApC,OACpB,sBACEnB,UAAU,iBACVyB,MAAO,CAAEC,gBAAgB,OAAD,OAASnH,EAAT,MACxB6G,QAAS,kBAAMD,EAAQE,KAAR,UAAgB6B,EAAMC,KAAtB,OAA4B1I,KAH7C,SAKE,sBAAKuF,UAAU,QAAf,SACG1F,EAAMuI,sBCRAO,GAA0B1F,YACrC,CAHsB,SAAC/C,GAAD,OAAWA,EAAMiC,aAIvC,SAACA,GAAD,OAAeA,EAAUvC,Y,kBCarByG,GAAWC,YAAyB,CACxCsC,kBAAmBD,KAGNnC,eAAQH,GAARG,EAdO,SAAC,GAAD,IAAGoC,EAAH,EAAGA,kBAAH,OACpB,sBAAKrD,UAAU,iBAAf,SAEIqD,EAAkBxH,KAAI,gBAAGrB,EAAH,EAAGA,GAAOkI,EAAV,0BACpB,eAAC,GAAD,eAA4BA,GAARlI,W,kBC8Cb8I,GAtDG,WAChB,MAAsCC,mBAAS,CAAEjF,MAAO,GAAIkF,SAAU,KAAtE,oBAAOC,EAAP,KAAoBC,EAApB,KAEMC,EAAY,uCAAG,WAAOC,GAAP,SAAA9F,EAAA,6DACnB8F,EAAEC,iBADiB,kBAIXrE,EAAKsE,2BAA2BL,EAAYnF,MAAOmF,EAAYD,UAJpD,OAMjBE,EAAe,CAAEpF,MAAO,GAAIkF,SAAU,KANrB,gDAQjB9E,QAAQC,IAAI,mBAAoB,KAAMC,SARrB,yDAAH,sDAYZmF,EAAe,SAACvC,EAAMwC,GAAP,OAAiBN,EAAe,2BAAKD,GAAN,mBAAoBjC,EAAOwC,MAE/E,OACE,uBAAKhE,UAAU,MAAf,UACE,sBAAKA,UAAU,SAAf,SACE,0CAEF,sBAAKA,UAAU,SAAf,SACE,uBAAMiE,SAAUN,EAAhB,SACE,uBAAK3D,UAAU,MAAf,UACE,sBAAKA,UAAU,SAAf,SACE,eAAC,GAAD,CACEgE,MAAOP,EAAYnF,MACnB4F,SAAU,SAAC1C,EAAMwC,GAAP,OAAiBD,EAAavC,EAAMwC,IAC9CG,MAAM,SACN3C,KAAK,YAGT,sBAAKxB,UAAU,SAAf,SACE,eAAC,GAAD,CACEgE,MAAOP,EAAYD,SACnBU,SAAU,SAAC1C,EAAMwC,GAAP,OAAiBD,EAAavC,EAAMwC,IAC9CG,MAAM,WACN3C,KAAK,eAGT,sBAAKxB,UAAU,SAAf,SACE,eAAC,GAAD,CAAcnF,KAAK,SAAnB,iCAEF,sBAAKmF,UAAU,SAAf,SACE,eAAC,GAAD,CAAcnF,KAAK,SAASuG,QAASvB,GAAkBoD,gBAAc,EAArE,4CC6BCmB,GA1EM,WACnB,MAAsCb,mBAAS,CAAElF,YAAa,GAAIC,MAAO,GAAIkF,SAAU,GAAIa,gBAAiB,KAA5G,oBAAOZ,EAAP,KAAoBC,EAApB,KAEMC,EAAY,uCAAG,WAAOC,GAAP,iBAAA9F,EAAA,yDACnB8F,EAAEC,iBAEEJ,EAAYD,WAAaC,EAAYY,gBAHtB,uBAIjBC,MAAM,wBAJW,mDASM9E,EAAK+E,+BAA+Bd,EAAYnF,MAAOmF,EAAYD,UATzE,uBAST1G,EATS,EASTA,KATS,UAWXa,EAA0Bb,EAAM,CAAEuB,YAAaoF,EAAYpF,cAXhD,QAajBqF,EAAe,CAAErF,YAAa,GAAIC,MAAO,GAAIkF,SAAU,GAAIa,gBAAiB,KAb3D,kDAejB3F,QAAQC,IAAI,mBAAoB,KAAMC,SAfrB,0DAAH,sDAmBZmF,EAAe,SAACvC,EAAMwC,GAAP,OAAiBN,EAAe,2BAAKD,GAAN,mBAAoBjC,EAAOwC,MAE/E,OACE,uBAAKhE,UAAU,MAAf,UACE,sBAAKA,UAAU,SAAf,SACE,6CAEF,sBAAKA,UAAU,SAAf,SACE,uBAAMiE,SAAUN,EAAhB,SACE,uBAAK3D,UAAU,MAAf,UACE,sBAAKA,UAAU,SAAf,SACE,eAAC,GAAD,CACEgE,MAAOP,EAAYpF,YACnB6F,SAAU,SAAC1C,EAAMwC,GAAP,OAAiBD,EAAavC,EAAMwC,IAC9CG,MAAM,OACN3C,KAAK,kBAGT,sBAAKxB,UAAU,SAAf,SACE,eAAC,GAAD,CACEgE,MAAOP,EAAYnF,MACnB4F,SAAU,SAAC1C,EAAMwC,GAAP,OAAiBD,EAAavC,EAAMwC,IAC9CG,MAAM,SACN3C,KAAK,YAGT,sBAAKxB,UAAU,SAAf,SACE,eAAC,GAAD,CACEgE,MAAOP,EAAYD,SACnBU,SAAU,SAAC1C,EAAMwC,GAAP,OAAiBD,EAAavC,EAAMwC,IAC9CG,MAAM,WACN3C,KAAK,eAGT,sBAAKxB,UAAU,SAAf,SACE,eAAC,GAAD,CACEgE,MAAOP,EAAYY,gBACnBH,SAAU,SAAC1C,EAAMwC,GAAP,OAAiBD,EAAavC,EAAMwC,IAC9CG,MAAM,mBACN3C,KAAK,sBAGT,sBAAKxB,UAAU,SAAf,SACE,eAAC,GAAD,CAAcnF,KAAK,SAAnB,+CChCRiG,I,MAAWC,YAAyB,CACxC1F,YAAaoC,EACbrB,OAAQgE,MAGKa,eAAQH,GAARG,EA/BF,SAAC,GAAD,IAAG5F,EAAH,EAAGA,YAAae,EAAhB,EAAgBA,OAAhB,OACX,uBAAK4D,UAAU,UAAf,UACE,gCACE,8BAAI,eAAC,IAAD,CAASwE,OAAK,EAACC,GAAG,IAAIC,gBAAgB,YAAtC,oBACJ,8BAAI,eAAC,IAAD,CAASD,GAAG,SAASC,gBAAgB,YAArC,qBAEFrJ,EACE,8BAAI,oBAAG+F,QAAS,kBAAM5B,EAAKmF,WAAvB,sBAEJ,uCACE,8BAAI,eAAC,IAAD,CAASH,OAAK,EAACC,GAAG,SAASC,gBAAgB,YAA3C,qBACJ,8BAAI,eAAC,IAAD,CAASF,OAAK,EAACC,GAAG,YAAYC,gBAAgB,YAA9C,2BAIV,8BAAI,eAAC,IAAD,CAASF,OAAK,EAACC,GAAG,SAASC,gBAAgB,YAA3C,qBACJ,8BAAI,eAAC,GAAD,SAGJtI,EACE,KACA,eAAC,GAAD,UCpBOwI,GAXO,SAAC,GAAsC,IAApCZ,EAAmC,EAAnCA,MAAOE,EAA4B,EAA5BA,SAAUC,EAAkB,EAAlBA,MAAO3C,EAAW,EAAXA,KAG/C,OACE,uBAAKxB,UAAU,QAAf,UACE,wBAAOgE,MAAOA,EAAOE,SAJJ,SAACN,GAAD,OAAOM,EAAS1C,EAAMoC,EAAEiB,OAAOb,QAIHnJ,KAAK,WAAWiK,YAAY,MACzE,iCAAQX,QCKCY,GAXG,SAAC,GAAsC,IAApCf,EAAmC,EAAnCA,MAAOE,EAA4B,EAA5BA,SAAUC,EAAkB,EAAlBA,MAAO3C,EAAW,EAAXA,KAG3C,OACE,uBAAKxB,UAAU,QAAf,UACE,wBAAOgE,MAAOA,EAAOE,SAJJ,SAACN,GAAD,OAAOM,EAAS1C,EAAMoC,EAAEiB,OAAOb,QAIHnJ,KAAK,OAAOiK,YAAY,MACrE,iCAAQX,QC6BRrD,GAAWC,YAAyB,CACxCtF,UAAW4E,GACX2E,UAAWvE,KAOEQ,eAAQH,IAJH,SAACI,GAAD,MAAe,CACjC+D,UAAW,kBAAM/D,ElBtBa,CAC9BrG,KAAMU,QkBwBO0F,EAtCM,SAAC,GAAD,IAAGxF,EAAH,EAAGA,UAAWuJ,EAAd,EAAcA,UAAWC,EAAzB,EAAyBA,UAAzB,OACnB,uCACE,sBAAKjF,UAAU,gBAAf,SACE,uBAAKA,UAAU,MAAf,UACE,sBAAKA,UAAU,QAAf,mBACA,sBAAKA,UAAU,QAAf,kBACA,sBAAKA,UAAU,QAAf,sBACA,sBAAKA,UAAU,mBAAf,mBACA,sBAAKA,UAAU,mBAAf,yBAIFvE,EAAUI,KAAI,SAACD,GAAD,OAAc,eAAC,GAAD,CAAgCA,SAAUA,GAAvBA,EAASpB,OAE1D,uBAAKwF,UAAU,iCAAf,UACE,sBAAKA,UAAU,SAAf,SACE,uBAAKA,UAAU,iBAAf,oBACU,IAAI2B,KAAKC,aAAa,QAAS,CAAEH,MAAO,WAAYI,SAAU,QAASC,OAAOkD,QAG1F,sBAAKhF,UAAU,WAAf,SACE,eAAC,GAAD,CAAcoB,QAAS6D,EAAvB,kCCNOhE,gBAJE,SAACtG,EAAOuK,GAAR,MAAsB,CACrCrI,YbNsCsI,EaMFD,EAAShC,MAAMkC,OAAOC,ebL1D3H,YACE,CAACwE,KACD,SAACE,GAAD,OAAiBA,EAAcA,EAAY+C,GAAsB,SaGOxK,IbNrC,IAACwK,IaSzBlE,EAjBQ,SAAC,GAAD,QAAGpE,WAAcvC,EAAjB,EAAiBA,MAAOsI,EAAxB,EAAwBA,MAAxB,OACrB,uBAAK5C,UAAU,qBAAf,UACE,gCAAK1F,EAAL,YACA,sBAAK0F,UAAU,UAAf,SAEI4C,EAAM/G,KAAI,SAACgF,GAAD,OACR,eAAC,GAAD,CAA8BA,KAAMA,GAAfA,EAAKrG,eCJrB8K,GAJE,kBACf,eAAC,GAAD,KCOaC,GARG,kBAChB,sBAAKvF,UAAU,MAAf,SACE,sBAAKA,UAAU,8BAAf,SACE,eAAC,GAAD,SCKSwF,GARM,kBACnB,sBAAKxF,UAAU,MAAf,SACE,sBAAKA,UAAU,8BAAf,SACE,eAAC,GAAD,SCUOyF,GAA6B,WACxC,OAAO,SAACvE,GACN,IAAMwE,EAAgB1H,EAAUnB,WAAW,eAE3CqE,EAlBwC,CAC1CrG,KAAMC,IAmBJ4K,EAAcvH,MACbwH,MAAK,SAACC,GACL,IAAMC,EAAiDD,E1B+BjBE,KAAKjK,KAAI,SAACoC,GAClD,MAAyBA,EAAI8H,OAArBzL,EAAR,EAAQA,MAAOsI,EAAf,EAAeA,MAEf,MAAO,CACLoD,UAAWC,UAAU3L,EAAM4L,eAC3B1L,GAAIyD,EAAIzD,GACRF,QACAsI,YAIyBrC,QAAO,SAAC4F,EAAKlG,GAExC,OADAkG,EAAIlG,EAAI3F,MAAM4L,eAAiBjG,EACxBkG,IACN,I0B3CCjF,EApBiC,SAAC2E,GAAD,MAAqB,CAC1DhL,KAAMC,EACNK,QAAS0K,GAkBIO,CAAwBP,OAElCQ,OAAM,SAACC,GAjB2B,IAACtL,EAkBlCkG,GAlBkClG,EAkBDsL,EAAM1H,QAlBa,CACxD/D,KAAMC,EACNK,QAASH,UCiBL8F,GAAWC,YAAyB,CACxCwF,qBAAsBhE,GACtBiE,mBAAoBhE,KAOPvB,eAAQH,IAJH,SAACI,GAAD,MAAe,CACjCuE,2BAA4B,kBAAMvE,EAASuE,UAG9BxE,EA9BG,SAAC,GAAqF,IAAnFiC,EAAkF,EAAlFA,MAAOqD,EAA2E,EAA3EA,qBAAsBC,EAAqD,EAArDA,mBAAoBf,EAAiC,EAAjCA,2BAKpE,OAJAgB,qBAAU,WACRhB,MACC,IAECc,IAAyBC,EAEzB,sBAAKxG,UAAU,wBAAf,wBAOF,uCACE,eAAC,IAAD,CAAOwE,OAAK,EAACkC,KAAI,UAAKxD,EAAMwD,MAAQC,UAAWC,KAC/C,eAAC,IAAD,CAAOF,KAAI,UAAKxD,EAAMwD,KAAX,oBAAmCC,UAAWE,WC4BzD/F,GAAWC,YAAyB,CACxC1F,YAAaoC,IAOAwD,eAAQH,IAJH,SAACI,GAAD,MAAe,CACjC4F,eAAgB,SAAChK,GAAD,OAAUoE,ECzDE,SAACpE,GAAD,MAAW,CACvCjC,KAAMO,EACND,QAAS2B,GDuD0BgK,CAAehK,QAGrCmE,EAnDH,SAAC,GAAqC,IAAnC5F,EAAkC,EAAlCA,YAAayL,EAAqB,EAArBA,eA0B1B,OAzBAL,qBAAU,WACR,IAAMM,EAAsBvH,EAAKwH,mBAAL,+BAAAlJ,EAAA,MAAwB,WAAOF,GAAP,SAAAE,EAAA,0DAC9CF,EAD8C,gCAE1BD,EAA0BC,GAFA,cAIxCqJ,YAAW,SAACrB,GAClBkB,EAAe,aACbtM,GAAIoL,EAASpL,IACVoL,EAASG,YAPgC,sBAWhDe,EAAelJ,GAXiC,2CAAxB,uDAmB5B,OAAO,WACLmJ,OAED,IAGD,gBAAC,IAAD,WACE,eAAC,GAAD,IACA,sBAAK/G,UAAU,iBAAf,SACE,gBAAC,IAAD,WACE,eAAC,IAAD,CAAOwE,OAAK,EAACkC,KAAK,IAAIC,UAAWrB,KACjC,eAAC,IAAD,CAAOoB,KAAK,SAASC,UAAWO,KAChC,eAAC,IAAD,CAAO1C,OAAK,EAACkC,KAAK,YAAYC,UAAWQ,KACzC,eAAC,IAAD,CAAO3C,OAAK,EAACkC,KAAK,SAASU,OAAQ,kBAAM/L,EAAc,eAAC,IAAD,CAAUoJ,GAAG,MAAS,eAAC,GAAD,OAC7E,eAAC,IAAD,CAAOD,OAAK,EAACkC,KAAK,YAAYU,OAAQ,kBAAM/L,EAAc,eAAC,IAAD,CAAUoJ,GAAG,MAAS,eAAC,GAAD,OAChF,eAAC,IAAD,CAAOD,OAAK,EAACkC,KAAK,SAASC,UAAW5G,gBEvChDsH,IAASD,OACP,eAAC,IAAD,CAAUhK,MAAOA,EAAjB,SACE,eAAC,IAAD,CAAaG,UAAWA,EAAxB,SACE,eAAC,GAAD,QAGJ+J,SAASC,eAAe,W","file":"static/js/main.56580be6.chunk.js","sourcesContent":["const INITIAL_STATE = {\n  sections: [\n    {\n      title: 'Ancient Books',\n      imageUrl: 'https://images.unsplash.com/photo-1489421471208-251cc68284b8?ixid=MXwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHw%3D&ixlib=rb-1.2.1&auto=format&fit=crop&w=1651&q=80',\n      id: 1,\n      linkUrl: 'store/ancient'\n    },\n    {\n      title: 'Modern Books',\n      imageUrl: 'https://images.unsplash.com/photo-1571167713125-0792be4b1062?ixid=MXwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHw%3D&ixlib=rb-1.2.1&auto=format&fit=crop&w=1100&q=80',\n      id: 2,\n      linkUrl: 'store/modern'\n    },\n    {\n      title: 'Used Books',\n      imageUrl: 'https://images.unsplash.com/photo-1561532409-8329daaeda83?ixlib=rb-1.2.1&ixid=MXwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHw%3D&auto=format&fit=crop&w=1650&q=80',\n      id: 3,\n      linkUrl: 'store/used'\n    },\n    {\n      title: 'New Books',\n      imageUrl: 'https://images.unsplash.com/photo-1607473128383-0cf6c96f0689?ixid=MXwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHw%3D&ixlib=rb-1.2.1&auto=format&fit=crop&w=668&q=80',\n      id: 4,\n      linkUrl: 'store/new'\n    }\n  ]\n}\n\nconst directoryReducer = (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n    default:\n      return state\n  }\n}\n\nexport default directoryReducer\n","export const CollectionActionTypes = {\n  FETCH_COLLECTIONS_START: 'FETCH_COLLECTIONS_START',\n  FETCH_COLLECTIONS_SUCCESS: 'FETCH_COLLECTIONS_SUCCESS',\n  FETCH_COLLECTIONS_FAILURE: 'FETCH_COLLECTIONS_FAILURE'\n}\n","import { CollectionActionTypes } from 'Redux/collection.types'\n\nconst INITIAL_STATE = {\n  sections: null,\n  isFetching: false,\n  errorMessage: undefined\n}\n\nconst collectionReducer = (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n    case CollectionActionTypes.FETCH_COLLECTIONS_START:\n      return {\n        ...state,\n        isFetching: true\n      }\n    case CollectionActionTypes.FETCH_COLLECTIONS_SUCCESS:\n      return {\n        ...state,\n        isFetching: false,\n        sections: action.payload\n      }\n    case CollectionActionTypes.FETCH_COLLECTIONS_FAILURE:\n      return {\n        ...state,\n        isFetching: false,\n        errorMessage: action.payload\n      }\n    default:\n      return state\n  }\n}\n\nexport default collectionReducer\n","export const UserActionTypes = {\n  SET_CURRENT_USER: 'SET_CURRENT_USER'\n}\n","import { UserActionTypes } from 'Redux/user.types'\n\nconst INITIAL_STATE = {\n  currentUser: null\n}\n\nconst userReducer = (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n    case UserActionTypes.SET_CURRENT_USER:\n      return {\n        ...state,\n        currentUser: action.payload\n      }\n    default:\n      return state\n  }\n}\n\nexport default userReducer\n","export const CartActionTypes = {\n  TOGGLE_CART_HIDDEN: 'TOGGLE_CART_HIDDEN',\n  ADD_ITEM: 'ADD_ITEM',\n  REMOVE_ITEM: 'REMOVE_ITEM',\n  CLEAR_ITEM: 'CLEAR_ITEM',\n  CLEAR_CART: 'CLEAR_CART'\n}\n","export const addItemToCart = (cartItems, cartItemToAdd) => {\n  const existingCartItem = cartItems.find((cartItem) => cartItem.id === cartItemToAdd.id)\n\n  let newCartItemsArray\n\n  if (existingCartItem) {\n    newCartItemsArray = cartItems.map((cartItem) => (\n      cartItem.id === cartItemToAdd.id ? { ...cartItem, quantity: cartItem.quantity + 1 } : cartItem\n    ))\n  } else {\n    newCartItemsArray = [...cartItems, { ...cartItemToAdd, quantity: 1 }]\n  }\n\n  return newCartItemsArray\n}\n\nexport const removeItemFromCart = (cartItems, cartItemToRemove) => {\n  const existingCartItem = cartItems.find((cartItem) => cartItem.id === cartItemToRemove.id)\n\n  let newCartItemsArray\n\n  if (existingCartItem.quantity !== 1) {\n    newCartItemsArray = cartItems.map((cartItem) => (\n      cartItem.id === cartItemToRemove.id ? { ...cartItem, quantity: cartItem.quantity - 1 } : cartItem\n    ))\n  } else {\n    newCartItemsArray = cartItems.filter((cartItem) => cartItem.id !== cartItemToRemove.id)\n  }\n\n  return newCartItemsArray\n}\n\nexport const clearItemFromCart = (cartItems, cartItemToClear) => {\n  let newCartItemsArray\n\n  newCartItemsArray = cartItems.filter((cartItem) => cartItem.id !== cartItemToClear.id)\n\n  return newCartItemsArray\n}\n","import { CartActionTypes } from 'Redux/cart.types'\nimport { addItemToCart, removeItemFromCart, clearItemFromCart } from 'Redux/cart.utils'\n\nconst INITIAL_STATE = {\n  hidden: true,\n  cartItems: []\n}\n\nconst cartReducer = (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n    case CartActionTypes.TOGGLE_CART_HIDDEN:\n      return {\n        ...state,\n        hidden: !state.hidden\n      }\n    case CartActionTypes.ADD_ITEM:\n      return {\n        ...state,\n        cartItems: addItemToCart(state.cartItems, action.payload)\n      }\n    case CartActionTypes.REMOVE_ITEM:\n      return {\n        ...state,\n        cartItems: removeItemFromCart(state.cartItems, action.payload)\n      }\n    case CartActionTypes.CLEAR_ITEM:\n      return {\n        ...state,\n        cartItems: clearItemFromCart(state.cartItems, action.payload)\n      }\n    case CartActionTypes.CLEAR_CART:\n      return {\n        ...state,\n        cartItems: []\n      }\n    default:\n      return state\n  }\n}\n\nexport default cartReducer\n","import { combineReducers } from 'redux'\nimport { persistReducer } from 'redux-persist'\nimport storage from 'redux-persist/lib/storage'\n\nimport directoryReducer from 'Redux/directory.reducer'\nimport collectionReducer from 'Redux/collection.reducer'\nimport userReducer from 'Redux/user.reducer'\nimport cartReducer from 'Redux/cart.reducer'\n\nconst persistConfig = {\n  key: 'root',\n  storage,\n  whitelist: ['cart']\n}\n\nconst rootReducer = combineReducers({\n  directory: directoryReducer,\n  collection: collectionReducer,\n  user: userReducer,\n  cart: cartReducer\n})\n\nexport default persistReducer(persistConfig, rootReducer)\n","import { createStore, applyMiddleware } from 'redux'\nimport { persistStore } from 'redux-persist'\nimport logger from 'redux-logger'\nimport thunk from 'redux-thunk'\n\nimport rootReducer from 'Redux/root-reducer'\n\nconst middlewares = [logger, thunk]\n\nexport const store = createStore(rootReducer, applyMiddleware(...middlewares))\n\nexport const persistor = persistStore(store)\n","import { createSelector } from 'reselect'\n\nconst selectUser = (state) => state.user\n\nexport const selectCurrentUser = createSelector(\n  [selectUser],\n  (user) => user.currentUser\n)\n","import firebase from 'firebase/app'\nimport 'firebase/auth'\nimport 'firebase/firestore'\n\nconst config = {\n  apiKey: \"AIzaSyBFhRI7wSxsAgaVIsChy46OFXcEi1qR_-A\",\n  authDomain: \"react-redux-shop-cd7f2.firebaseapp.com\",\n  projectId: \"react-redux-shop-cd7f2\",\n  storageBucket: \"react-redux-shop-cd7f2.appspot.com\",\n  messagingSenderId: \"1096222963957\",\n  appId: \"1:1096222963957:web:9994740a69e5d5770f6dbc\"\n}\n\nexport const createUserProfileDocument = async (userAuth, additionalData) => {\n  if (!userAuth) return\n\n  const userRef = firestore.doc(`users/${userAuth.uid}`)\n\n  const snapShot = await userRef.get()\n\n  if (!snapShot.exists) {\n    const { displayName, email } = userAuth\n    const createdAt = new Date()\n\n    try {\n      await userRef.set({\n        displayName,\n        email,\n        createdAt,\n        ...additionalData\n      })\n    } catch (error) {\n      console.log('error creating user', error.message)\n    }\n  }\n\n  return userRef\n}\n\n// firebase.initializeApp(config)\n!firebase.apps.length ? firebase.initializeApp(config) : firebase.app()\n\n// export const uploadLocalJsonToFirebase = async (collectionKey, objectToAdd) => {\n//   const collectionRef = firestore.collection(collectionKey)\n\n//   const batch = firestore.batch()\n\n//   objectToAdd.forEach((obj) => {\n//     const newDocRef = collectionRef.doc()\n//     batch.set(newDocRef, obj)\n//   })\n\n//   return await batch.commit()\n// }\n\nexport const convertCollectionsSnapshotToMap = (collections) => {\n  const transformedCollection = collections.docs.map((doc) => {\n    const { title, items } = doc.data()\n\n    return {\n      routeName: encodeURI(title.toLowerCase()),\n      id: doc.id,\n      title,\n      items\n    }\n  })\n\n  return transformedCollection.reduce((acc, cur) => {\n    acc[cur.title.toLowerCase()] = cur\n    return acc\n  }, {})\n}\n\nexport const auth = firebase.auth()\nexport const firestore = firebase.firestore()\n\nconst provider = new firebase.auth.GoogleAuthProvider()\nprovider.setCustomParameters({ prompt: 'select_account' })\nexport const signInWithGoogle = () => auth.signInWithPopup(provider)\n\nexport default firebase\n","import React from 'react'\n\nconst AboutPage = () => {\n  const stack = ['React', 'Router', 'Redux', 'Thunk', 'Reselect', 'Firebase', 'Google Sign-In']\n\n  return (\n    <div className=\"row\">\n      <div className=\"col-12 col-md-6 offset-md-3 col-lg-4 offset-lg-4\">\n        <div className=\"bo-card\">\n          <div className=\"bo-card-head\">\n            <h2 className=\"text-center\">Stack</h2>\n          </div>\n          <div className=\"bo-card-body\">\n            <p className=\"mb-3\">This test project is build with:</p>\n            <ul className=\"text-list\">\n              {\n                stack.map((cur, i) => (\n                  <li key={i}>{cur}</li>\n                ))\n              }\n            </ul>\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default AboutPage\n","import { createSelector } from 'reselect'\n\nconst selectCart = (state) => state.cart\n\nexport const selectCartHidden = createSelector(\n  [selectCart],\n  (cart) => cart.hidden\n)\n\nexport const selectCartItems = createSelector(\n  [selectCart],\n  (cart) => cart.cartItems\n)\n\nexport const selectCartItemsCount = createSelector(\n  [selectCartItems],\n  (cartItems) => cartItems.reduce((a, b) => a + b.quantity, 0)\n)\n\nexport const selectCartTotal = createSelector(\n  [selectCartItems],\n  (cartItems) => cartItems.reduce((a, b) => a + b.quantity * b.price, 0)\n)\n","import { CartActionTypes } from 'Redux/cart.types'\n\nexport const toggleCartHidden = () => ({\n  type: CartActionTypes.TOGGLE_CART_HIDDEN\n})\n\nexport const addItem = (item) => ({\n  type: CartActionTypes.ADD_ITEM,\n  payload: item\n})\n\nexport const removeItem = (item) => ({\n  type: CartActionTypes.REMOVE_ITEM,\n  payload: item\n})\n\nexport const clearItem = (item) => ({\n  type: CartActionTypes.CLEAR_ITEM,\n  payload: item\n})\n\nexport const clearCart = () => ({\n  type: CartActionTypes.CLEAR_CART\n})\n","import React from 'react'\nimport { withRouter } from 'react-router-dom'\nimport { connect } from 'react-redux'\nimport { createStructuredSelector } from 'reselect'\n\nimport { toggleCartHidden } from 'Redux/cart.actions'\nimport { selectCartItems } from 'Redux/cart.selectors'\nimport { CartItem, CustomButton } from 'Components'\n\nimport './CartDropdown.css'\n\nconst CartDropdown = ({ cartItems, toggleCartHidden, history }) => (\n  <div className=\"cart-dropdown\">\n    <div className=\"cart-dropdown-items\">\n      {\n        cartItems.length > 0\n        ? cartItems.map((cartItem) => <CartItem key={cartItem.id} cartItem={cartItem} />)\n        : 'Cart is empty.'\n      }\n    </div>\n    <CustomButton\n      onClick={() => {\n        history.push('/checkout')\n        toggleCartHidden()\n      }}\n    >Go to Checkout</CustomButton>\n  </div>\n)\n\nconst mapState = createStructuredSelector({\n  cartItems: selectCartItems\n})\n\nconst mapDispatch = (dispatch) => ({\n  toggleCartHidden: () => dispatch(toggleCartHidden())\n})\n\nexport default withRouter(connect(mapState, mapDispatch)(CartDropdown))\n","import React from 'react'\nimport { connect } from 'react-redux'\nimport { createStructuredSelector } from 'reselect'\n\nimport { toggleCartHidden } from 'Redux/cart.actions'\nimport { selectCartItemsCount } from 'Redux/cart.selectors'\n\nimport './CartIcon.css'\n\nconst CartIcon = ({ toggleCartHidden, itemCount }) => (\n  <a onClick={toggleCartHidden} className=\"cart-icon\">\n    <div className=\"icon icon-bag-gray-1\"></div>\n    <span>{itemCount}</span>\n  </a>\n)\n\nconst mapState = createStructuredSelector({\n  itemCount: selectCartItemsCount\n})\n\nconst mapDispatch = (dispatch) => ({\n  toggleCartHidden: () => dispatch(toggleCartHidden())\n})\n\nexport default connect(mapState, mapDispatch)(CartIcon)\n","import React from 'react'\n\nimport './CartItem.css'\n\nconst CartItem = ({ cartItem: { imageUrl, name, price, quantity } }) => (\n  <div className=\"cart-item\">\n    <div className=\"cart-item-image\" style={{ backgroundImage: `url(${imageUrl})` }} />\n    <div className=\"cart-item-info\">\n      {name}\n      <br />\n      {quantity} x {new Intl.NumberFormat('de-DE', { style: 'currency', currency: 'EUR' }).format(price)}\n    </div>\n  </div>\n)\n\nexport default CartItem\n","import React from 'react'\nimport { connect } from 'react-redux'\n\nimport { addItem, removeItem, clearItem } from 'Redux/cart.actions'\n\nimport './CheckoutItem.css'\n\nconst CheckoutItem = ({ cartItem, addItem, removeItem, clearItem }) => {\n  const { imageUrl, name, price, quantity } = cartItem\n\n  return (\n    <div className=\"checkout-item\">\n      <div className=\"row align-items-center\">\n        <div className=\"col-2\"><div className=\"checkout-image\" style={{ backgroundImage: `url(${imageUrl})` }} /></div>\n        <div className=\"col-3\">{name}</div>\n        <div className=\"col-3\">\n          <div className=\"d-flex align-items-center\">\n            <a className=\"inc-dec\" onClick={() => removeItem(cartItem)}>\n              <div className=\"icon icon-arrowleft-gray-1\"></div>\n            </a>\n            <span>{quantity}</span>\n            <a className=\"inc-dec\" onClick={() => addItem(cartItem)}>\n              <div className=\"icon icon-arrowright-gray-1\"></div>\n            </a>\n          </div>\n        </div>\n        <div className=\"col-2 text-right\">\n          {new Intl.NumberFormat('de-DE', { style: 'currency', currency: 'EUR' }).format(price)}\n        </div>\n        <div className=\"col-2\">\n          <div className=\"d-flex justify-content-end\">\n            <a onClick={() => clearItem(cartItem)}>\n              <div className=\"icon icon-close-gray-1\"></div>\n            </a>\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nconst mapDispatch = (dispatch) => ({\n  addItem: (cartItem) => dispatch(addItem(cartItem)),\n  removeItem: (cartItem) => dispatch(removeItem(cartItem)),\n  clearItem: (cartItem) => dispatch(clearItem(cartItem))\n})\n\nexport default connect(null, mapDispatch)(CheckoutItem)\n","import React from 'react'\nimport { connect } from 'react-redux'\n\nimport { addItem } from 'Redux/cart.actions'\nimport { CustomButton } from 'Components'\n\nimport './CollectionItem.css'\n\nconst CollectionItem = ({ item, item: { imageUrl, name, price }, addItem }) => (\n  <div className=\"collection-item\">\n    <div className=\"image\" style={{ backgroundImage: `url(${imageUrl})` }} />\n    <div className=\"footer\">\n      <div className=\"name\">{name}</div>\n      <div className=\"price\">{new Intl.NumberFormat('de-DE', { style: 'currency', currency: 'EUR' }).format(price)}</div>\n    </div>\n    <CustomButton onClick={() => addItem(item)}>Add to Cart</CustomButton>\n  </div>\n)\n\nconst mapDispatch = (dispatch) => ({\n  addItem: (item) => dispatch(addItem(item))\n})\n\nexport default connect(null, mapDispatch)(CollectionItem)\n","import { createSelector } from 'reselect'\n\nconst selectCollection = (state) => state.collection\n\nexport const selectCollectionSections = createSelector(\n  [selectCollection],\n  (collection) => collection.sections\n)\n\nexport const selectCollectionSectionsAsArray = createSelector(\n  [selectCollectionSections],\n  (collections) => collections ? Object.keys(collections).map((key) => collections[key]) : []\n)\n\nexport const selectCollectionSection = (collectionUrlParam) => (\n  createSelector(\n    [selectCollectionSections],\n    (collections) => collections ? collections[collectionUrlParam] : null\n  )\n)\n\nexport const selectIsCollectionFetching = createSelector(\n  [selectCollection],\n  (collection) => collection.isFetching\n)\n\nexport const selectIsCollectionLoaded = createSelector(\n  [selectCollection],\n  (collection) => !!collection.sections\n)\n","import React from 'react'\nimport { connect } from 'react-redux'\nimport { createStructuredSelector } from 'reselect'\n\nimport { selectCollectionSectionsAsArray } from 'Redux/collection.selectors'\nimport { CollectionPreview } from 'Components'\n\nimport './CollectionOverview.css'\n\nconst CollectionOverview = ({ collectionSectionsArray }) => (\n  <>\n    {\n      collectionSectionsArray.map(({ id, ...otherProps }) => (\n        <CollectionPreview key={id} {...otherProps} />\n      ))\n    }\n  </>\n)\n\nconst mapState = createStructuredSelector({\n  collectionSectionsArray: selectCollectionSectionsAsArray\n})\n\nexport default connect(mapState)(CollectionOverview)\n","import React from 'react'\n\nimport { CollectionItem } from 'Components'\n\nimport './CollectionPreview.css'\n\nconst CollectionPreview = ({ title, items }) => (\n  <div className=\"collection-preview\">\n    <h2>{title.toUpperCase()}</h2>\n    <div className=\"preview\">\n      {\n        items.filter((_, i) => i < 4).map((item) => (\n          <CollectionItem key={item.id} item={item} />\n        ))\n      }\n    </div>\n  </div>\n)\n\nexport default CollectionPreview\n","import React from 'react'\n\nconst CustomButton = ({ children, isGoogleSignIn, ...otherProps }) => (\n  <button className={`bo-button ${isGoogleSignIn ? 'is-secondary' : 'bg-alcohol'}`} {...otherProps}>\n    {children}\n  </button>\n)\n\nexport default CustomButton\n","import React from 'react'\nimport { withRouter } from 'react-router-dom'\n\nimport './DirectoryItem.css'\n\nconst DirectoryItem = ({ title, imageUrl, linkUrl, match, history }) => (\n  <div\n    className=\"directory-item\"\n    style={{ backgroundImage: `url(${imageUrl})` }}\n    onClick={() => history.push(`${match.url}${linkUrl}`)}\n  >\n    <div className=\"title\">\n      {title.toUpperCase()}\n    </div>\n  </div>\n)\n\nexport default withRouter(DirectoryItem)\n","import { createSelector } from 'reselect'\n\nconst selectDirectory = (state) => state.directory\n\nexport const selectDirectorySections = createSelector(\n  [selectDirectory],\n  (directory) => directory.sections\n)\n","import React from 'react'\nimport { connect } from 'react-redux'\nimport { createStructuredSelector } from 'reselect'\n\nimport { selectDirectorySections } from 'Redux/directory.selectors'\nimport { DirectoryItem } from 'Components'\n\nimport './DirectoryMenu.css'\n\nconst DirectoryMenu = ({ directorySections }) => (\n  <div className=\"directory-menu\">\n    {\n      directorySections.map(({ id, ...otherProps }) => (\n        <DirectoryItem key={id} {...otherProps} />\n      ))\n    }\n  </div>\n)\n\nconst mapState = createStructuredSelector({\n  directorySections: selectDirectorySections\n})\n\nexport default connect(mapState)(DirectoryMenu)\n","import React, { useState } from 'react'\n\nimport { auth, signInWithGoogle } from 'Firebase/firebase.utils'\nimport { CustomButton, PasswordInput, TextInput } from 'Components'\n\nconst LoginForm = () => {\n  const [credentials, setCredentials] = useState({ email: '', password: '' })\n\n  const handleSubmit = async (e) => {\n    e.preventDefault()\n\n    try {\n      await auth.signInWithEmailAndPassword(credentials.email, credentials.password)\n\n      setCredentials({ email: '', password: '' })\n    } catch (error) {\n      console.log('error signing in', error.message)\n    }\n  }\n\n  const handleChange = (name, value) => setCredentials({ ...credentials, [name]: value })\n\n  return (\n    <div className=\"row\">\n      <div className=\"col-12\">\n        <h1>Login</h1>\n      </div>\n      <div className=\"col-12\">\n        <form onSubmit={handleSubmit}>\n          <div className=\"row\">\n            <div className=\"col-12\">\n              <TextInput\n                value={credentials.email}\n                onChange={(name, value) => handleChange(name, value)}\n                label=\"E-Mail\"\n                name=\"email\"\n              />\n            </div>\n            <div className=\"col-12\">\n              <PasswordInput\n                value={credentials.password}\n                onChange={(name, value) => handleChange(name, value)}\n                label=\"Password\"\n                name=\"password\"\n              />\n            </div>\n            <div className=\"col-12\">\n              <CustomButton type=\"submit\">Login with E-Mail</CustomButton>\n            </div>\n            <div className=\"col-12\">\n              <CustomButton type=\"button\" onClick={signInWithGoogle} isGoogleSignIn>Login with Google</CustomButton>\n            </div>\n          </div>\n        </form>\n      </div>\n    </div>\n  )\n}\n\nexport default LoginForm\n","import React, { useState } from 'react'\n\nimport { auth, createUserProfileDocument } from 'Firebase/firebase.utils'\nimport { CustomButton, PasswordInput, TextInput } from 'Components'\n\nconst RegisterForm = () => {\n  const [credentials, setCredentials] = useState({ displayName: '', email: '', password: '', confirmPassword: '' })\n\n  const handleSubmit = async (e) => {\n    e.preventDefault()\n\n    if (credentials.password !== credentials.confirmPassword) {\n      alert('passwords dont match')\n      return\n    }\n\n    try {\n      const { user } = await auth.createUserWithEmailAndPassword(credentials.email, credentials.password)\n\n      await createUserProfileDocument(user, { displayName: credentials.displayName })\n\n      setCredentials({ displayName: '', email: '', password: '', confirmPassword: '' })\n    } catch (error) {\n      console.log('error signing up', error.message)\n    }\n  }\n\n  const handleChange = (name, value) => setCredentials({ ...credentials, [name]: value })\n\n  return (\n    <div className=\"row\">\n      <div className=\"col-12\">\n        <h1>Register</h1>\n      </div>\n      <div className=\"col-12\">\n        <form onSubmit={handleSubmit}>\n          <div className=\"row\">\n            <div className=\"col-12\">\n              <TextInput\n                value={credentials.displayName}\n                onChange={(name, value) => handleChange(name, value)}\n                label=\"Name\"\n                name=\"displayName\"\n              />\n            </div>\n            <div className=\"col-12\">\n              <TextInput\n                value={credentials.email}\n                onChange={(name, value) => handleChange(name, value)}\n                label=\"E-Mail\"\n                name=\"email\"\n              />\n            </div>\n            <div className=\"col-12\">\n              <PasswordInput\n                value={credentials.password}\n                onChange={(name, value) => handleChange(name, value)}\n                label=\"Password\"\n                name=\"password\"\n              />\n            </div>\n            <div className=\"col-12\">\n              <PasswordInput\n                value={credentials.confirmPassword}\n                onChange={(name, value) => handleChange(name, value)}\n                label=\"Confirm Password\"\n                name=\"confirmPassword\"\n              />\n            </div>\n            <div className=\"col-12\">\n              <CustomButton type=\"submit\">Register with E-Mail</CustomButton>\n            </div>\n          </div>\n        </form>\n      </div>\n    </div>\n  )\n}\n\nexport default RegisterForm\n","import React from 'react'\nimport { NavLink } from 'react-router-dom'\nimport { connect } from 'react-redux'\nimport { createStructuredSelector } from 'reselect'\n\nimport { selectCurrentUser } from 'Redux/user.selectors'\nimport { selectCartHidden } from 'Redux/cart.selectors'\nimport { auth } from 'Firebase/firebase.utils'\nimport { CartDropdown, CartIcon } from 'Components'\n\nimport './Tabs.css'\n\nconst Tabs = ({ currentUser, hidden }) => (\n  <div className=\"bo-tabs\">\n    <ul>\n      <li><NavLink exact to=\"/\" activeClassName=\"is-active\">Home</NavLink></li>\n      <li><NavLink to=\"/store\" activeClassName=\"is-active\">Store</NavLink></li>\n      {\n        currentUser\n        ? <li><a onClick={() => auth.signOut()}>Logout</a></li>\n        : (\n          <>\n            <li><NavLink exact to=\"/login\" activeClassName=\"is-active\">Login</NavLink></li>\n            <li><NavLink exact to=\"/register\" activeClassName=\"is-active\">Register</NavLink></li>\n          </>\n        )\n      }\n      <li><NavLink exact to=\"/about\" activeClassName=\"is-active\">About</NavLink></li>\n      <li><CartIcon /></li>\n    </ul>\n    {\n      hidden\n      ? null\n      : <CartDropdown />\n    }\n  </div>\n)\n\nconst mapState = createStructuredSelector({\n  currentUser: selectCurrentUser,\n  hidden: selectCartHidden\n})\n\nexport default connect(mapState)(Tabs)\n","import React from 'react'\n\nconst PasswordInput = ({ value, onChange, label, name }) => {\n  const handleChange = (e) => onChange(name, e.target.value)\n\n  return (\n    <div className=\"input\">\n      <input value={value} onChange={handleChange} type=\"password\" placeholder=\" \" />\n      <label>{label}</label>\n    </div>\n  )\n}\n\nexport default PasswordInput\n","import React from 'react'\n\nconst TextInput = ({ value, onChange, label, name }) => {\n  const handleChange = (e) => onChange(name, e.target.value)\n\n  return (\n    <div className=\"input\">\n      <input value={value} onChange={handleChange} type=\"text\" placeholder=\" \" />\n      <label>{label}</label>\n    </div>\n  )\n}\n\nexport default TextInput\n","import React from 'react'\nimport { connect } from 'react-redux'\nimport { createStructuredSelector } from 'reselect'\n\nimport { selectCartItems, selectCartTotal } from 'Redux/cart.selectors'\nimport { clearCart } from 'Redux/cart.actions'\nimport { CheckoutItem, CustomButton } from 'Components'\n\nconst CheckoutPage = ({ cartItems, cartTotal, clearCart }) => (\n  <>\n    <div className=\"checkout-item\">\n      <div className=\"row\">\n        <div className=\"col-2\">IMAGE</div>\n        <div className=\"col-3\">NAME</div>\n        <div className=\"col-3\">QUANTITY</div>\n        <div className=\"col-2 text-right\">PRICE</div>\n        <div className=\"col-2 text-right\">DELETE</div>\n      </div>\n    </div>\n    {\n      cartItems.map((cartItem) => <CheckoutItem key={cartItem.id} cartItem={cartItem} />)\n    }\n    <div className=\"row justify-content-center p-5\">\n      <div className=\"col-12\">\n        <div className=\"bo-welcome p-0\">\n          TOTAL: {new Intl.NumberFormat('de-DE', { style: 'currency', currency: 'EUR' }).format(cartTotal)}\n        </div>\n      </div>\n      <div className=\"col-auto\">\n        <CustomButton onClick={clearCart}>\n          CLEAR ALL\n        </CustomButton>\n      </div>\n    </div>\n  </>\n)\n\nconst mapState = createStructuredSelector({\n  cartItems: selectCartItems,\n  cartTotal: selectCartTotal\n})\n\nconst mapDispatch = (dispatch) => ({\n  clearCart: () => dispatch(clearCart())\n})\n\nexport default connect(mapState, mapDispatch)(CheckoutPage)\n","import React from 'react'\nimport { connect } from 'react-redux'\n\nimport { selectCollectionSection } from 'Redux/collection.selectors'\nimport { CollectionItem } from 'Components'\n\nconst CollectionPage = ({ collection: { title, items } }) => (\n  <div className=\"collection-preview\">\n    <h2>{title} Books</h2>\n    <div className=\"preview\">\n      {\n        items.map((item) => (\n          <CollectionItem key={item.id} item={item} />\n        ))\n      }\n    </div>\n  </div>\n)\n\nconst mapState = (state, ownProps) => ({\n  collection: selectCollectionSection(ownProps.match.params.collectionName)(state)\n})\n\nexport default connect(mapState)(CollectionPage)\n","import React from 'react'\n\nimport { DirectoryMenu } from 'Components'\n\nconst HomePage = () => (\n  <DirectoryMenu />\n)\n\nexport default HomePage\n","import React from 'react'\n\nimport { LoginForm } from 'Components'\n\nconst LoginPage = () => (\n  <div className=\"row\">\n    <div className=\"col-12 col-lg-4 offset-lg-4\">\n      <LoginForm />\n    </div>\n  </div>\n)\n\nexport default LoginPage\n","import React from 'react'\n\nimport { RegisterForm } from 'Components'\n\nconst RegisterPage = () => (\n  <div className=\"row\">\n    <div className=\"col-12 col-lg-4 offset-lg-4\">\n      <RegisterForm />\n    </div>\n  </div>\n)\n\nexport default RegisterPage\n","import { firestore, convertCollectionsSnapshotToMap } from 'Firebase/firebase.utils'\nimport { CollectionActionTypes } from 'Redux/collection.types'\n\nexport const fetchCollectionsStart = () => ({\n  type: CollectionActionTypes.FETCH_COLLECTIONS_START\n})\n\nexport const fetchCollectionsSuccess = (collectionsMap) => ({\n  type: CollectionActionTypes.FETCH_COLLECTIONS_SUCCESS,\n  payload: collectionsMap\n})\n\nexport const fetchCollectionsFailure = (errorMessage) => ({\n  type: CollectionActionTypes.FETCH_COLLECTIONS_FAILURE,\n  payload: errorMessage\n})\n\nexport const fetchCollectionsStartAsync = () => {\n  return (dispatch) => {\n    const collectionRef = firestore.collection('collections')\n\n    dispatch(fetchCollectionsStart())\n\n    collectionRef.get()\n    .then((snapshot) => {\n      const collectionsMap = convertCollectionsSnapshotToMap(snapshot)\n\n      dispatch(fetchCollectionsSuccess(collectionsMap))\n    })\n    .catch((error) => {\n      dispatch(fetchCollectionsFailure(error.message))\n    })\n  }\n}\n","import React, { useEffect } from 'react'\nimport { connect } from 'react-redux'\nimport { Route } from 'react-router-dom'\nimport { createStructuredSelector } from 'reselect'\n\nimport { fetchCollectionsStartAsync } from 'Redux/collection.actions'\nimport { selectIsCollectionFetching, selectIsCollectionLoaded } from 'Redux/collection.selectors'\nimport { CollectionPage } from 'Pages'\nimport { CollectionOverview } from 'Components'\n\nconst StorePage = ({ match, isCollectionFetching, isCollectionLoaded, fetchCollectionsStartAsync }) => {\n  useEffect(() => {\n    fetchCollectionsStartAsync()\n  }, [])\n\n  if (isCollectionFetching || !isCollectionLoaded) {\n    return (\n      <div className=\"mt-6 pt-6 text-center\">\n        Loading...\n      </div>\n    )\n  }\n\n  return (\n    <>\n      <Route exact path={`${match.path}`} component={CollectionOverview} />\n      <Route path={`${match.path}/:collectionName`} component={CollectionPage} />\n    </>\n  )\n}\n\nconst mapState = createStructuredSelector({\n  isCollectionFetching: selectIsCollectionFetching,\n  isCollectionLoaded: selectIsCollectionLoaded\n})\n\nconst mapDispatch = (dispatch) => ({\n  fetchCollectionsStartAsync: () => dispatch(fetchCollectionsStartAsync())\n})\n\nexport default connect(mapState, mapDispatch)(StorePage)\n","import React, { useEffect } from 'react'\nimport { HashRouter as Router, Switch, Route, Redirect } from 'react-router-dom'\nimport { connect } from 'react-redux'\nimport { createStructuredSelector } from 'reselect'\n\nimport { setCurrentUser } from 'Redux/user.actions'\nimport { selectCurrentUser } from 'Redux/user.selectors'\nimport { auth, createUserProfileDocument } from 'Firebase/firebase.utils'\nimport { AboutPage, CheckoutPage, HomePage, LoginPage, RegisterPage, StorePage } from 'Pages'\nimport { Tabs } from 'Components'\n\nconst App = ({ currentUser, setCurrentUser }) => {\n  useEffect(() => {\n    const unsubscribeFromAuth = auth.onAuthStateChanged(async (userAuth) => {\n      if (userAuth) {\n        const userRef = await createUserProfileDocument(userAuth)\n  \n        userRef.onSnapshot((snapshot) => {\n          setCurrentUser({\n            id: snapshot.id,\n            ...snapshot.data()\n          })\n        })\n      } else {\n        setCurrentUser(userAuth)\n      }\n\n      // uploadLocalJsonToFirebase('collections', collectionSectionsArray.map(({ title, items }) => {\n      //   return { title, items }\n      // }))\n    })\n\n    return () => {\n      unsubscribeFromAuth()\n    }\n  }, [])\n\n  return (\n    <Router>\n      <Tabs />\n      <div className=\"container mt-5\">\n        <Switch>\n          <Route exact path=\"/\" component={HomePage} />\n          <Route path=\"/store\" component={StorePage} />\n          <Route exact path=\"/checkout\" component={CheckoutPage} />\n          <Route exact path=\"/login\" render={() => currentUser ? <Redirect to=\"/\" /> : <LoginPage /> } />\n          <Route exact path=\"/register\" render={() => currentUser ? <Redirect to=\"/\" /> : <RegisterPage /> } />\n          <Route exact path=\"/about\" component={AboutPage} />\n        </Switch>\n      </div>\n    </Router>\n  )\n}\n\nconst mapState = createStructuredSelector({\n  currentUser: selectCurrentUser\n})\n\nconst mapDispatch = (dispatch) => ({\n  setCurrentUser: (user) => dispatch(setCurrentUser(user))\n})\n\nexport default connect(mapState, mapDispatch)(App)\n","import { UserActionTypes } from 'Redux/user.types'\n\nexport const setCurrentUser = (user) => ({\n  type: UserActionTypes.SET_CURRENT_USER,\n  payload: user\n})\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { Provider } from 'react-redux'\nimport { PersistGate } from 'redux-persist/integration/react'\n\nimport { store, persistor } from 'Redux/store'\nimport App from 'App'\n\nReactDOM.render(\n  <Provider store={store}>\n    <PersistGate persistor={persistor}>\n      <App />\n    </PersistGate>\n  </Provider>,\n  document.getElementById('root')\n)\n"],"sourceRoot":""}